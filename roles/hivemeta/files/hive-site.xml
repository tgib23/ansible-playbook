<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<configuration>
 <property>
    <name>javax.jdo.option.ConnectionURL</name>
    <value>jdbc:mysql://HIVEMETA:3306/hive?createDatabaseIfNotExist=true</value>
    <description>JDBC connect string for a JDBC metastore</description>
 </property>
 <property>
    <name>javax.jdo.option.ConnectionDriverName</name>
    <value>com.mysql.jdbc.Driver</value>
    <description>Driver class name for a JDBC metastore</description>
 </property>
 <property>
    <name>javax.jdo.option.ConnectionUserName</name>
    <value>hive</value>
    <description>username to use against metastore database</description>
 </property>
 <property>
    <name>javax.jdo.option.ConnectionPassword</name>
    <value>hive</value>
    <description>password to use against metastore database</description>
 </property>
 <property>
    <name>hive.metastore.uris</name>
    <value>thrift://HIVEMETA:9083</value>
    <!--
    <value></value>
    -->
 </property>
 <property>
   <name>hive.server2.enable.doAs</name>
   <value>true</value>
   <description>Set this property to enable impersonation in Hive Server 2</description>
 </property>
 <property>
   <name>hive.metastore.execute.setugi</name>
   <value>true</value>
   <description>Set this property to enable Hive Metastore service impersonation in unsecure mode. In unsecure mode, setting this property to true will cause the metastore to execute DFS operations using the client's reported user and group permissions. Note that this property must be set on both the client and server sides. If the client sets it to true and the server sets it to false, the client setting will be ignored.</description>
 </property>
 <property>
    <name>datanucleus.schema.autoCreateAll</name>
    <value>true</value>
 </property>
 <property>
  <name>hive.zookeeper.quorum</name>
  <value>syamada-dist0:5181,syamada-dist1:5181,syamada-dist3:5181</value>
 </property>
 <property>
   <name>hive.support.concurrency</name>
   <value>true</value>
 </property>
 <property> 
   <name>hive.server2.authentication</name> 
   <value>PAM</value> 
 </property> 
 <property> 
   <name>hive.server2.authentication.pam.services</name> 
   <value>login,sudo,sshd</value> 
 </property>
 <!--
 <property>
   <name>hive.metastore.authorization.storage.checks</name>
   <value>true</value>
 </property>
 -->
   <!--
 <property>
   <name>hive.users.in.admin.role</name>
   <value>mapr</value>
 </property>
 
 <property>
   <name>hive.security.authorization.enabled</name>
   <value>true</value>
 </property>
 
 <property>
   <name>hive.security.metastore.authorization.manager</name>
   <value>org.apache.hadoop.hive.ql.security.authorization.MetaStoreAuthzAPIAuthorizerEmbedOnly</value>
 </property>
 
 <property>
   <name>hive.security.authorization.manager</name>
 -->
   <!--
   -->
   <!--
   <value>org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory</value>
   -->
   <!--
   <value>org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory</value>
 </property>
 <property>
   <name>hive.security.authorization.task.factory</name>
   <value>org.apache.hadoop.hive.ql.parse.authorization.HiveAuthorizationTaskFactoryImpl</value>
 </property>

 <property>
   <name>hive.security.authenticator.manager</name>
   <value>org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator</value>
 </property>
   -->
</configuration>
